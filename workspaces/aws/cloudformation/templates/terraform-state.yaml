# Reference: https://developer.hashicorp.com/terraform/language/backend/s3
AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to create S3 bucket and DynamoDB table for Terraform state management"

Parameters:
  Environment:
    Type: String
    Description: "Environment (dev/staging/prod)"
    AllowedValues:
      - dev
      - staging
      - prod
    Default: dev

Resources:
  TerraformStateBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${Environment}-terraform-state-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TerraformLockTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${Environment}-terraform-lock-${AWS::AccountId}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH

Outputs:
  StateBucketName:
    Description: Name of the S3 bucket for Terraform state
    Value: !Ref TerraformStateBucket
    Export:
      Name: !Sub "${Environment}-StateBucketName-${AWS::AccountId}"

  LockTableName:
    Description: Name of the DynamoDB table for state locking
    Value: !Ref TerraformLockTable
    Export:
      Name: !Sub "${Environment}-LockTableName-${AWS::AccountId}"
